ARG ANTLR_TOOL=antlr4-4.7.2-SNAPSHOT-complete.jar
#
# Alpine - base image
#
FROM alpine as base
# Prepare environment
ENV ENV=/etc/profile
RUN cp /etc/profile.d/color_prompt.sh.disabled /etc/profile.d/color_prompt.sh

# Install Base
RUN apk update
RUN apk upgrade
RUN apk add --no-cache wget curl unzip tree
RUN apk add --no-cache nano
RUN apk add --no-cache git

#
# antlr4 - Build
#
FROM base as build_antlr4
# build antlr tool based on antlr fork:
# https://github.com/HSorensen/antlr4.git
# Result is the antlr-tool in /opt/antlr4/tool/target/antlr4-4.7.2-SNAPSHOT-complete.jar

# Install Java and Maven needed to build antlr
RUN apk add --no-cache openjdk11
RUN apk add --no-cache maven

# Prepare runtime enviroment
RUN mkdir /opt/antlr4

# Build antlr tool
# See https://github.com/antlr/antlr4/blob/master/doc/building-antlr.md
RUN git clone -b lexerinclude --single-branch https://github.com/HSorensen/antlr4.git /opt/antlr4
RUN cd /opt/antlr4 && mvn -DskipTests install >mvn-install.log
# Antlr Tool is in /opt/antlr4/tool/target/antlr4-4.7.2-SNAPSHOT-complete.jar
# run with: java  -jar ./antlr4-4.7.2-SNAPSHOT-complete.jar


#
# antlr4 - Runtime
#
FROM base as antlr4
ARG ANTLR_TOOL

# Install Java
RUN apk add --no-cache openjdk11

# Prepare runtime
COPY --from=build_antlr4 /opt/antlr4/tool/target/${ANTLR_TOOL} /usr/local/lib/${ANTLR_TOOL}

ENV CLASSPATH=".:/usr/local/lib/${ANTLR_TOOL}:$CLASSPATH"
RUN echo "alias antlr4='java -jar /usr/local/lib/${ANTLR_TOOL}'" > /etc/profile.d/antlr4_alias.sh
RUN echo "alias grun='java org.antlr.v4.gui.TestRig'" >> /etc/profile.d/antlr4_alias.sh
