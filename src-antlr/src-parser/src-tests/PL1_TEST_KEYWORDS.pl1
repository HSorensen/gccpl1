PL1_TEST_KEYWORDS: PROC OPTIONS(MAIN);
/* TEST OF KW AS VARIABLES */
/*  COPYRIGHT 2002, 2003-2004 HENRIK SORENSEN

    THIS FILE IS PART OF GCC FRONT-END FOR THE PL/I PROGRAMMING LANGUAGE, GCC PL/I.

    GCC PL/I IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY IT
    UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY THE
    FREE SOFTWARE FOUNDATION; VERSION 2.
*/

KW_AS_VARS: PROC;
A           = A;
ABNORMAL    = ABNORMAL;
ALIAS       = ALIAS;
ALIGNED         = ALIGNED;
ALLOCATE        = ALLOC;
ANYCOND,ANYCONDITION = ANYCONDITION;
ASSIGNABLE,ASGN = ASGN;
ATTENTION       = ATTN;
ATTACH          = ATTACH ;
AUTO            = AUTO;
AUTOMATIC       = AUTOMATIC;
B           = B;
B1          = B1;
B2          = B2;
B3          = B3;
B4          = B4;
BACKWARDS       = BACKWARDS;
BASED           = BASED;
BEGIN           = BEGIN;
BIGENDIAN       = BIGENDIAN;
BIN         = BIN;
BINARY          = BIN;
BIT         = BIT;
BUFFERED,BUF        = BUFFERED;
BUILTIN         = BUILTIN;
BY          = BY;
BYADDR      = BYADDR;
BYVALUE     = BYVALUE;
BX          = BX;
C           = C;
CALL            = CALL;
CDECL           = CDECL;
CELL            = CELL;
CHAR            = CHAR;
CHARACTER       = CHAR;
CLOSE           = CLOSE;
COLUMN          = COLUMN;
COMPLEX         = COMPLEX;
CONNECTED,CONN      = CONNECTED;
CONDITION       = CONDITION;
CONSTANT        = CONST;
CONTROLLED,CTL      = CONTROLLED;
COPY            = COPY;
DATA            = DATA;
DATE            = DATE;
/* DCL,DECLARE      = DCL; */
DEC         = DEC;
DECIMAL         = DEC;
DEFAULT         = DEFAULT;
DEFINE          = DEFINE;
DEFINED         = DEF;
DELAY           = DELAY;
DELETE          = DELETE;
DESCRIPTORS     = DESCRIPTORS;
DETACH          = DETACH;
DIMENSION       = DIM;
DIRECT          = DIRECT;
DISPLAY         = DISPLAY;
DO          = DO;
DOWNTHRU    = DOWNTHRU;
E           = E;
EDIT            = EDIT;
ELSE            = ELSE;
END         = END;
ENTRY           = ENTRY;
ENV         = ENVIRONMENT;
ENVIRONMENT     = ENVIRONMENT;
ERROR           = ERROR;
EVENT           = EVENT;
EXCLUSIVE,EXCL      = EXCLUSIVE;
EXPORTS         = EXPORTS;
EXIT            = EXIT;
EXTERNAL,EXT        = EXTERNAL;
F           = F;
FB          = FB;
FS          = FS;
FBS         = FBS;
FETCH           = FETCH ;
FILE            = FILE;
FINISH          = FINISH;
FIXED           = FIXED;
FLOAT           = FLOAT;
FLUSH           = FLUSH ;
FREE            = FREE;
FOREVER         = FOREVER;
FORMAT          = FORMAT;
FROM            = FROM;
G           = G;
GENERIC         = GENERIC;
GET         = GET;
GO          = GO;
GOTO            = GOTO;
GRAPHIC         = GRAPHIC;
GX          = GX;
HANDLE      = HANDLE;
HEXADEC     = HEXADEC;
I           = I;
IEEE        = IEEE;
IF(1)           = IFC;
IF          = IF;
IGNORE          = IGNORE;
IMPORTED        = IMPORTED;
IN          = IN;
INLINE      = INLINE;
INPUT           = INPUT;
INTERNAL        = INTERNAL;
INVALIDOP       = INVALIDOP;
INIT            = INIT;
INITIAL         = INIT;
INTO            = INTO;
ITERATE         = ITERATE(1);
LABEL           = LABEL;
LEAVE           = LEAVE;
LIKE            = LIKE;
LIMITED         = LIMITED;
LINE            = LINE;
LINESIZE        = LINESIZE;
LIST            = LIST;
LITTLEENDIAN    = LITTLEENDIAN;
LOCATE          = LOCATE;
LOCAL           = LOCAL;
LOOP            = LOOP;
KEY         = KEY;
KEYED           = KEYED;
KEYTO           = KEYTO;
KEYFROM         = KEYFROM;
M               = M;
MAIN            = MAIN;
NAME            = NAME;
NONASGN,NONASSIGNABLE= NONASSIGNABLE;
NONCONNECTED,NONCONN = NONCONN;
NOINIT          = NOINIT;
NOINLINE        = NOINLINE;
NOLOCK          = NOLOCK;
NOINVALIDOP     = NOINVALIDOP;
NONE            = NONE;
NONVARYING      = NONVARYING;
NON_QUICK       = NON_QUICK;
NO_QUICK_BLOCKS = NO_QUICK_BLOCKS;
NORMAL          = NORMAL;
OFFSET          = OFFSET ;
ON          = ON;
OPEN            = OPEN;
OPTIONAL        = OPTIONAL;
ORDINAL         = ORDINAL;
OTHER           = OTHERWISE;
OTHERWISE       = OTHERWISE;
OUTPUT          = OUTPUT;
P           = P;
PACKAGE     = PACKAGE;
PACKED      = PACKED;
PACKED_DECIMAL = PACKED_DECIMAL;
PAGE            = PAGE;
PAGESIZE        = PAGESIZE;
PARM,PARAMETER  = PARAM;
PIC         = PICTURE;
PICTURE         = PICTURE;
POINTER         = POINTER;
POS         = POSITION;
PREC,PRECISION      = PRECISION;
PRINT           = PRINT;
PRIORITY        = PRIORITY;
PROC            = PROC;
PROCEDURE       = PROC;
PUT         = PUT;
R           = R;
RANGE           = RANGE;
READ            = READ;
REAL            = REAL;
RECORD          = RECORD;
REFER           = REFER;
RELEASE         = RELEASE ;
RENAME          = RENAME;
RESERVES        = RESERVES ;
RETURN          = RETURN;
REPEAT          = REPEAT;
REPLY           = REPLY;
REREAD          = REREAD ;
RESERVED        = RESERVED ;
RESIGNAL        = RESIGNAL ;
REVERT          = REVERT;
REWRITE         = REWRITE;
SELECT          = SELECT;
SET         = SET;
SEQUENTIAL,SEQL     = SEQUENTIAL;
SKIP            = SKIP;
SIGNED          = SIGNED;
SNAP            = SNAP;
STATIC          = STATIC;
STORAGE         = STORAGE;
STOP            = STOP;
STREAM          = STREAM;
STRING          = STRING;
STRINGVALUE     = STRINGVALUE;
STRUCTURE       = STRUCTURE;
SUPPORT         = SUPPORT;
SYSTEM          = SYSTEM;
TASK            = TASK;
THEN            = THEN;
THREAD          = THREAD ;
TITLE           = TITLE;
TO          = TO;
TRANSIENT       = TRANSIENT;
TSTACK          = TSTACK;
TYPE            = TYPE;
UNALIGNED       = UNALIGNED;
UNBUFFERED,UNBUF    = UNBUFFERED;
UNCONNECTED     = UNCONNECTED;
UNION           = UNION;
UNLOCK          = UNLOCK;
UNSIGNED,UNS        = UNSIGNED;
UNTIL           = UNTIL;
UPDATE          = UPDATE;
UPTHRU          = UPTHRU;
WAIT            = WAIT;
WHEN            = WHEN;
WHILE           = WHILE;
WIDECHAR,WCHAR  = WCHAR;
WRITE           = WRITE;
VALIDATE        = VALIDATE;
VALUE           = VALUE;
VAR         = VARIABLE;
VARIABLE        = VARIABLE;
VARYING         = VARYING;
VARZ,VARYINGZ = VARYINGZ;
V           = V;
VB          = VB;
VS          = VS;
VBS         = VBS;
WX          = WX;
X           = X;
XN          = XN;
XU          = XU;

/* PREPROCESSOR KEYWORDS */
ACTIVATE=ACT;
DEACTIVATE=DEACT;
INCLUDE=INCLUDE;
NOPRINT=NOPRINT;
NOTE=NOTE;
REPLACE=REPLACE;

PROC=0;
CHARGRAPHIC=0;
IRREDUCIBLE=0;
NOCHARGRAPHIC=0;
OPTIONS=0;
ORDER=0;
RECURSIVE=0;
REDUCIBLE=0;
REORDER=0;
RETURNS=0;
MAIN=0;
NOEXECOPS=0;
REENTRANT=0;


AREA=0;
ATTENTION=0;
CONDITION=0;
CHECK=0;
CONVERSION=0;
ENDFILE=0;
ENDPAGE=0;
ERROR=0;
FINISH=0;
FIXEDOVERFLOW=0;
KEY=0;
NAME=0;
OVERFLOW=0;
PENDING=0;
RECORD=0;
SIZE=0;
STRINGRANGE=0;
STRINGSIZE=0;
SUBSCRIPTRANGE=0;
TRANSMIT=0;
UNDEFINEDFILE=0;
UNDERFLOW=0;
ZERODIVIDE=0;

ASM=0;
ASSEMBLER=0;
COBOL=0;
FORTRAN=0;
INTER=0;
RETCODE=0;

ADDBUFF
, ASCII

, BKWD
, BLKSIZE
, BUFFERS
, BUFFOFF
, BUFND
, BUFNI
, BUFSP

, CONSECUTIVE
, CTLASA
, CTL360

, D
, DB

, GENKEY
, GRAPHIC

, INDEXAREA
, INDEXED

, KEYLENGTH
, KEYLOC

, NCP
, NOWRITE

, RECSIZE
, REGIONAL
, REUSE

, PASSWORD

, SCALARVARYING
, SIS

, TOTAL
, TP
, TRKOFL

, U

, VSAM =A;
 
 


NOCHECK         = NOCHECK;
NOCONVERSION        = NOCONVERSION;
NOFIXEDOVERFLOW     = NOFIXEDOVERFLOW;
NOLOCK          = NOLOCK;
NOOVERFLOW      = NOOVERFLOW;
NOSIZE          = NOSIZE;
NOSUBSCRIPTRANGE    = NOSUBSCRIPTRANGE;
NOSTRINGRANGE       = NOSTRINGRANGE;
NOSTRINGSIZE        = NOSTRINGSIZE;
NOUNDERFLOW     = NOUNDERFLOW;
NOZERODIVIDE        = NOZERODIVIDE;
END KW_AS_VARS;

KW_AS_ARRAYS: PROC;
NOCHECK         (1)= NOCHECK;
NOCONVERSION        (1)= NOCONVERSION;
NOFIXEDOVERFLOW     (1)= NOFIXEDOVERFLOW;
NOLOCK          (1)= NOLOCK;
NOOVERFLOW      (1)= NOOVERFLOW;
NOSIZE          (1)= NOSIZE;
NOSUBSCRIPTRANGE    (1)= NOSUBSCRIPTRANGE;
NOSTRINGRANGE       (1)= NOSTRINGRANGE;
NOSTRINGSIZE        (1)= NOSTRINGSIZE;
NOUNDERFLOW     (1)= NOUNDERFLOW;
NOZERODIVIDE        (1)= NOZERODIVIDE;



AREA(1)=0;
ATTENTION(1)=0;
CONDITION(1)=0;
CHECK(1)=0;
CONVERSION(1)=0;
ENDFILE(1)=0;
ENDPAGE(1)=0;
ERROR(1)=0;
FINISH(1)=0;
FIXEDOVERFLOW(1)=0;
KEY(1)=0;
NAME(1)=0;
OVERFLOW(1)=0;
PENDING(1)=0;
RECORD(1)=0;
SIZE(1)=0;
STRINGRANGE(1)=0;
STRINGSIZE(1)=0;
SUBSCRIPTRANGE(1)=0;
TRANSMIT(1)=0;
UNDEFINEDFILE(1)=0;
UNDERFLOW(1)=0;
ZERODIVIDE(1)=0;



PROCEDURE(1)=0;
CHARGRAPHIC(1)=0;
IRREDUCIBLE(1)=0;
NOCHARGRAPHIC(1)=0;
OPTIONS(1)=0;
ORDER(1)=0;
RECURSIVE(1)=0;
REDUCIBLE(1)=0;
REORDER(1)=0;
RETURNS(1)=0;
MAIN(1)=0;
NOEXECOPS(1)=0;
REENTRANT(1)=0;






/* KW AS SUBSCRIPTED VARIABLES: */
A(1)            = A;
ABNORMAL(1)     = ABNORMAL(1);
ALIAS(1)        = ALIAS;
ALIGNED(1)      = ALIGNED;
ALLOCATE(1)     = ALLOC(1);
ANYCOND(1)      = ANYCONDITION(1);
ASGN(1),ASSIGNABLE(1) = ASSIGNABLE(1);
ATTENTION(1)        = ATTENTION;
ATTACH(1)=ATTACH;
AUTO(1)         = AUTO;
AUTOMATIC(1)        = AUTOMATIC;
B(1)            = B;
B1(1)           = B1;
B2(1)           = B2;
B3(1)           = B3;
B4(1)           = B4;
BACKWARDS(1)        = BACKWARDS;
BASED(1)        = BASED;
BEGIN(1)        = BEGIN;
BIGENDIAN(1)    = BIGENDIAN;
BIN(1)          = BIN;
BINARY(1)       = BIN;
BIT(1)          = BIT;
BUFFERED(1),BUF(1)  = BUFFERED;
BUILTIN(1)      = BUILTIN;
BY(1)           = BY;
BYADDR(1)       = BYADDR;
BYVALUE(1)      = BYVALUE;
BX(1)           = BX;
C(1)            = C;
CALL(1)         = CALL;
CELL(1)         = CELL;
CDECL(1)        = CDECL;
CHAR(1)         = CHAR;
CHARACTER(1)        = CHAR;
CLOSE(1)        = CLOSE;
COLUMN(1)       = COLUMN;
COMPLEX(1)      = COMPLEX;
CONNECTED(1),CONN(1)        = CONNECTED;
CONDITION(1)        = CONDITION;
CONSTANT(1)     = CONST(*);
CONTROLLED(1),CTL(1)    = CONTROLLED;
COPY(1)         = COPY;
DATA(1)         = DATA;
DATE(1)         = DATE;
DCL(1),DECLARE(1)   = DCL;
DEC(1)          = DEC;
DECIMAL(1)      = DEC;
DEFAULT(1)      = DEFAULT;
DEFINE(1)       = DEFINE;
DEFINED(1)      = DEFINED;
DELAY(1)        = DELAY;
DELETE(1)       = DELETE;
DESCRIPTORS(1)      = DESCRIPTORS;
DETACH(1) = DETACH ;
DIM(1)  = DIMENSION;
DIRECT(1)       = DIRECT;
DISPLAY(1)      = DISPLAY;
DO(1)           = DO;
DOWNTHRU(1)     = DOWNTHRU;
E(1)            = E;
EDIT(1)         = EDIT;
ELSE(1)         = ELSE;
END(1)          = END;
ENTRY(1)        = ENTRY;
ENV(1)          = ENVIRONMENT;
ENVIRONMENT(1)      = ENVIRONMENT;
ERROR(1)        = ERROR;
EVENT(1)        = EVENT;
EXCLUSIVE(1),EXCL(1)    = EXCLUSIVE;
EXIT(1)         = EXIT;
EXPORTS(1)      = EXPORTS;
EXTERNAL(1),EXT(1)  = EXTERNAL;
F(1)            = F;
FB(1)           = FB;
FS(1)           = FS;
FBS(1)          = FBS;
FETCH(1)        = FETCH;
FILE(1)         = FILE;
FINISH(1)       = FINISH;
FIXED(1)        = FIXED;
FLOAT(1)        = FLOAT;
FLUSH(1)        = FLUSH ;
FREE(1)         = FREE;
FOREVER(1)      = FOREVER;
FORMAT(1)       = FORMAT;
FROM(1)         = FROM;
G(1)            = G;
GENERIC(1)      = GENERIC;
GET(1)          = GET;
GO(1)           = GO;
GOTO(1)         = GOTO;
GRAPHIC(1)      = GRAPHIC;
GX(1)           = GX;
HANDLE(1)       = HANDLE(1);
HEXADEC(1)      = HEXADEC(1);
I(1)            = I;
IEEE(1)         = IEEE;
IF(1)           = IFC;
IF(1)           = IF;
IGNORE(1)       = IGNORE;
IMPORTED(1)     = IMPORTED;
IN(1)           = IN;
INLINE(1)       = INLINE(1);
INPUT(1)        = INPUT;
INTERNAL(1)     = INTERNAL;
INIT(1)         = INIT;
INITIAL(1)      = INIT;
INTO(1)         = INTO;
INVALIDOP(1)    = INVALIDOP;
ITERATE(1)      = ITERATE;
LABEL(1)        = LABEL;
LEAVE(1)        = LEAVE;
LIKE(1)         = LIKE;
LIMITED(1)      = LIMITED;
LINE(1)         = LINE;
LINESIZE(1)         = LINESIZE;
LIST(1)         = LIST;
LITTLEENDIAN(1) = LITTLEENDIAN ;
LOCATE(1)       = LOCATE;
LOCAL(1)        = LOCAL;
LOOP(1)         = LOOP;
KEY(1)          = KEY;
KEYED(1)        = KEYED;
KEYTO(1)        = KEYTO;
KEYFROM(1)      = KEYFROM;
M(1)            = M;
MAIN(1)         = MAIN;
NAME(1)         = NAME;
NOLOCK(1)       = NOLOCK;
NOINVALIDOP(1)  = NOINVALIDOP;
NOINIT(1)       = NOINIT;
NOINLINE(1)     = NOINLINE;
NORMAL(1)       = NORMAL;
NASGN(1),NONASSIGNABLE(1)= NONASSIGNABLE(1);
NONCONN(1),NONCONNECTED(1)=NONCONNECTED;
NONVAR(1),NONVARYING(1)=NONVARYING;
NONE(1)         = NONE;
NON_QUICK(1)    = NON_QUICK;
NO_QUICK_BLOCKS(1) = NO_QUICK_BLOCKS;
OFFSET(1)       = OFFSET ;
ON(1)           = ON;
OPEN(1)         = OPEN;
OPTIONAL(1)     = OPTIONAL;
ORDINAL(1)      = ORDINAL;
OTHER(1)        = OTHERWISE;
OTHERWISE(1)        = OTHERWISE;
OUTPUT(1)       = OUTPUT;
P(1)            = P;
PACKAGE(1)      = PACKAGE;
PACKED(1)       = PACKED;
PACKED_DECIMAL(1) = PACKED_DECIMAL;
PAGE(1)         = PAGE;
PAGESIZE(1)         = PAGESIZE;
PARAMETER(1),PARM(1)    = PARM(1);
PARAMETER(1),PARM(1)    = PARAMETER+PARM;
PIC(1)          = PICTURE;
PICTURE(1)      = PICTURE;
POINTER(1,1)        = POINTER;
POSITION(1)     = POSITION;
PRECISION(1),PREC(1)    = PREC;
PRINT(1)        = PRINT;
PRIORITY(1)     = PRIORITY;
PROC(1)         = PROC;
PROCEDURE(1)        = PROC;
PUT(1)          = PUT;
R(1)            = R;
RANGE(1)        = RANGE;
READ(1)         = READ;
REAL(1)         = REAL;
RECORD(1)       = RECORD;
REFER(1)        = REFER;
RELEASE(1)      = RELEASE ;
RENAME(1)       = RENAME;
RESERVES(1)     = RESERVES ;
RESERVED(1)     = RESERVED;
RETURN(1)       = RETURN;
REPEAT(1)       = REPEAT;
REPLY(1)        = REPLY;
REREAD(1)       = REREAD ;
RESIGNAL(1)     = RESIGNAL;
REVERT(1)       = REVERT;
REWRITE(1)      = REWRITE;
SELECT(1)       = SELECT;
SET(1)          = SET;
SEQUENTIAL(1),SEQL(1)   = SEQUENTIAL;
SIGNED(21)          = SIGNED;
SKIP(1)         = SKIP;
SNAP(1)         = SNAP;
STATIC(1)       = STATIC;
STOP(1)         = STOP;
STORAGE(1)      = STORAGE;
STREAM(1)       = STREAM;
STRING(1)       = STRING;
STRINGVALUE(1)  = STRINGVALUE;
STRUCTURE(1)    = STRUCTURE;
SUPPORT(1)      = SUPPORT ;
SYSTEM(1)       = SYSTEM;
TASK(1)         = TASK;
THEN(1)         = THEN;
THREAD(1)       = THREAD;
TITLE(1)        = TITLE;
TO(1)           = TO;
TRANSIENT(1)        = TRANSIENT;
TSTACK(1)       = 0;
TYPE(1)         = TYPE;
UNALIGNED(1)        = UNALIGNED;
UNBUFFERED(1),UNBUF(1)  = UNBUFFERED;
UNCONNECTED(1)      = UNCONNECTED;
UNION(1)            = UNION;
UNLOCK(1)       = UNLOCK;
UNSIGNED(1),UNS(1)      = UNSIGNED;
UNTIL(1)        = UNTIL;
UPDATE(1)       = UPDATE;
UPTHRU(1)       = UPTHRU;
WAIT(1)         = WAIT;
WHEN(1)         = WHEN;
WHILE(1)        = WHILE;
WIDECHAR(1),WCHAR(1)        = WIDECHAR;
WRITE(1)        = WRITE;
VALIDATE(1)     = VALIDATE(1);
VALUE(1)        = VALUE(1);
VAR(1)          = VARIABLE;
VARIABLE(1)     = VARIABLE;
VARYING(1)      = VARYING;
VARZ(1),VARYINGZ(1)=VARYINGZ;
V(1)            = V;
VB(1)           = VB;
VS(1)           = VS;
VBS(1)          = VBS;
WX(1)           = WX;
X(1)            = X;
XN(1)           = XN;
XU(1)           = XU;


/* PREPROCESSOR KEYWORDS */
ACTIVATE(1)=ACT;
DEACTIVATE(2)=DEACT;
INCLUDE(1)=INCLUDE;
NOPRINT(0)=NOPRINT;
NOTE(11)=NOTE;
REPLACE(1)=REPLACE;


NODESCRIPTOR,
DESCRIPTOR,
FROMALIEN,
FORTRAN,
FETCHABLE,
LINKAGE,
CDECL,
OPTLINK,
STDCALL,
SYSTEM,
WINMAIN =0;

NODESCRIPTOR(1),
DESCRIPTOR(1),
FROMALIEN(1),
FORTRAN(1),
FETCHABLE(1),
LINKAGE(1),
CDECL(1),
OPTLINK(1),
STDCALL(1),
SYSTEM(1),
WINMAIN(1) =0;


ASM(1)=0;
ASSEMBLER(1)=0;
COBOL(1)=0;
FORTRAN(1)=0;
INTER(1)=0;
RETCODE(1)=0;
END KW_AS_ARRAYS;

/* NEW TESTS FOR KW AS VARIABLES */

DISPLAY(1,A)=0;
IF(A)=0;
IF(A)=0 THEN B=0;

IF(C=1)=0;
IF(C=1)=0 THEN D=0;
IF(C=1)<0 THEN D=0;
IF(C=1)<=0 THEN D=0;
IF(C=1)>0 THEN D=0;
IF(C=1)>=0 THEN D=0;

IF(D,3)=5;
IF A THEN IF B THEN IF=0;
IF A THEN IF( B ) THEN IF=0; ELSE IF(A)=0;
IF A THEN IF( B ) THEN IF=0; ELSE IF(A,6)=0;
IF A THEN IF( B ) THEN IF=IF(0); ELSE IF(A,6)=0;


IF (A&B)='00001'BX THEN B=0;
IF (A&B)&'00001'BX THEN B=0;
IF (A&B)!'00001'BX THEN B=0;
IF ^(A&B)!'00001'BX THEN B=0;


DISPLAY('HERE');
DISPLAY('0')=0;

IF (A) = DISPLAY(1) THEN DISPLAY(1);

IF (A+1)=DISPLAY(2);


DO WHILE(1)=0 TO WHILE(2) WHILE(A>B);
END;
WHILE(1)=0;

DO WHILE(1)=0 TO WHILE(2) WHILE(A>B) UNTIL(B=C);
END;

DO UNTIL(1)=0 TO UNTIL(2) UNTIL(H=0);
END;

WAIT(A);
WAIT(A)=0;
A=WAIT(B);

DELAY(10);
DELAY(A)=9;

RETURN(9);
RETURN=0;


SELECT(1,2)=RETURN(9);
SELECT ( SELECT(1)); WHEN(1) DO; SELECT=0; SELECT(9,8)=0; END; END;


WHEN(1)=0;
SELECT; WHEN(1) A=0; END;

A0:PROC;
  DISPLAY(*)=0;
  DISPLAY(*,1)=0;
  DISPLAY(1,*)=0;
  DISPLAY(*,*)=0;
  DELAY(*)=0;
  DELAY(*,1)=0;
  DELAY(1,*)=0;
  DELAY(*,*)=0;
  IF(*)=0;
  IF(*,1)=0;
  IF(1,*)=0;
  IF(*,*)=0;
  RETURN(*)=0;
  RETURN(*,1)=0;
  RETURN(1,*)=0;
  RETURN(*,*)=0;
  SELECT(*)=0;
  SELECT(*,1)=0;
  SELECT(1,*)=0;
  SELECT(*,*)=0;
  UNTIL(*)=0;
  UNTIL(*,1)=0;
  UNTIL(1,*)=0;
  UNTIL(*,*)=0;
  WAIT(*)=0;
  WAIT(1,*)=0;
  WAIT(*,1)=0;
  WAIT(*,*)=0;
  WHEN(*)=0;
  WHEN(1,*)=0;
  WHEN(*,1)=0;
  WHEN(*,*)=0;
  WHILE(*)=0;
  WHILE(*,1)=0;
  WHILE(1,*)=0;
  WHILE(*,*)=0;

END;
BEGIN;
DCL ENTRY ENTRY EXT;
END;
BEGIN;
DCL ENTRY ENTRY(FIXED) EXT;
END;
A=ENTRY(1);
A(*)=ENTRY(*);
ENTRY(1)=0;
X:ENTRY(AX,AY); /* STATEMENT */
/* X:ENTRY(A,A)=0; NOT ALLOWED IN PL1GCC */
/* A:ENTRY:PROC(C); END; NOT ALLOWED IN PL1GCC */

A=FORMAT(1);
A(*)=FORMAT(*);
FORMAT(1)=0;
XF1:FORMAT(A,A);
XF2:FORMAT(A,A)=0;
A1:FORMAT:PROC(C); END;

PROC(A,B)=0;
I=PROC(A,1,B);

/*
DCL=1;
A=DCL+1;
DCL(A)=0;
*/
DCL(A00) FIXED;
DCL(A01,B FIXED);

DFL=0;
DEFAULT=0;
DEFAULT RANGE(*);

GET(A1,B)=0;
B=GET(A0,B);

PUT(1,B,C)=GET(A1,B);

A: PROC(PUT);
DCL PUT(*,3) CHAR(1);
END A;


PUT(*,*)=0;
PUT(*,3)=1;
GET(3,*)=1;
GET(*,*)=0;


FETCH(*)=RELEASE(*);

/* DCL AS ARRAY */
DCL(A,B),ENTRY(9)=0;
DCL(A,B),ENTRY(I=0)=0;

/* DCL AS STATEMENT */
BEGIN;
DCL(A,B),ENTRY(9);
END;
BEGIN;
DCL(A,B),ENTRY(I=0);
END;
BEGIN;
DCL(DCL(A,B),ENTRY(9)) ;
END;
BEGIN;
DCL A,B,ENTRY(9);
END;
DCL(DCL(A,B),ENTRY(I=0))=0;

DCL /* THIS IS A COMMENT */ (DCL(A,B),ENTRY(I=0))=0;


A1E:ENTRY(I)=0;

A1P:PROC(I)=0;


/* CHECK THAT KW THAT ARE USED BY THE LOOKAHEAD SCANNING, WORKS AS ID'S */
CALL ENTRY;
CALL PROC;
CALL DCL;
CALL OTHER;
CALL SNAP;
CALL FORMAT;
CALL DEFAULT;

IF P->STATEMENT.ENTRY THEN LINE = LINE || "ENTRY ";
IF P->STATEMENT.PROC THEN LINE = LINE || "PROC ";
IF P->STATEMENT.DCL THEN LINE = LINE || "DCL ";
IF P->STATEMENT.OTHER THEN LINE = LINE || "OTHER ";
IF P->STATEMENT.SNAP THEN LINE = LINE || "SNAP ";
IF P->STATEMENT.FORMAT THEN LINE = LINE || "FORMAT ";
IF P->STATEMENT.DEFAULT THEN LINE = LINE || "DEFAULT ";

IF P->STATEMENT.ENTRY(1) THEN LINE = LINE || "ENTRY ";
IF P->STATEMENT.PROC(1) THEN LINE = LINE || "PROC ";
IF P->STATEMENT.DCL(1) THEN LINE = LINE || "DCL ";
IF P->STATEMENT.OTHER(1) THEN LINE = LINE || "OTHER ";
IF P->STATEMENT.SNAP(1) THEN LINE = LINE || "SNAP ";
IF P->STATEMENT.FORMAT(1) THEN LINE = LINE || "FORMAT ";
IF P->STATEMENT.DEFAULT(1) THEN LINE = LINE || "DEFAULT ";

GOTO FINISH;
FINISH: ENTRY.NNAMES = NAMECNT;
SNAP:   PROC;
END SNAP ;
END PL1_TEST_KEYWORDS;