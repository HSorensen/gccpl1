   /*	ENTERPRISE NATIONALS 1985   */
   /*	PROGRAM TO BUILD DUMMY FILES PRIOR TO INPUTTING DATA   */
   /*	BUILD ANY OR ALL FILES AS REQD.  */

BUILD: PROC OPTIONS(MAIN);
   DCL	COPY_RIGHT  CHAR(20) STATIC INIT('(C) P.NORRIE - 1985');
   %INCLUDE 'DCLINFO.PLI';    /* STRUCTURE FOR YACHT INFO. FILE */
   %INCLUDE 'DCLRACE.PLI';    /* STRUCTURE FOR RACE DATA FILES  */
   %INCLUDE 'DCLRESLT.PLI';   /* STRUCTURE FOR RESULTS FILES    */
   DCL	MAXREC DEC FIXED(5) STATIC INIT(150); /* MAX. NO. OF YACHTS */
   DCL	KEYFLD BIN FIXED(15) STATIC INIT(0);
   DCL	RECCNT BIN FIXED(15) STATIC INIT(0);
   DCL	INFLD  CHAR(3) STATIC;
   DCL	INDEC  DEC FIXED(1) STATIC;
   DCL	(I,J,FIL) BIN FIXED(15) STATIC INIT(0);
   DCL	TITLES (6) CHAR(10) STATIC INIT('RACE1.DATA','RACE2.DATA','RACE3.DATA',
	     'RACE4.DATA','RACE5.DATA','RACE6.DATA');
   DCL	TITLVAR CHAR(10) STATIC;
   DCL	YACHTS	FILE;
   DCL	RACE	FILE;
   DCL	RESULT	FILE;

INIT:
   ON ERROR PUT SKIP LIST('ONCODE =',ONKEY());
INIT2:
   PUT SKIP LIST('BUILD YACHT INFO, RACE OR RESULTS FILE');
   PUT SKIP LIST('REPLY - Y/R/RES/END - ');
   GET LIST(INFLD);
   IF INFLD = 'END'  THEN GO TO EOJ;
   IF INFLD = 'Y'  THEN CALL YACHTP;      /* BUILD YACHT_INFO FILE */
   ELSE IF INFLD = 'R'  THEN CALL RACEP;       /* BUILD RACE FILE(S)    */
	ELSE IF INFLD = 'RES'  THEN CALL RESP; /*BUILD RESULTS FILE */
	     ELSE PUT SKIP LIST('INVALID - TRY AGAIN !');
   GO TO INIT2;   /* NEXT FILE OR END */

 /* BUILD YACHT INFO. FILE */
YACHTP:  PROC;
   OPEN FILE(YACHTS) RECORD KEYED SEQUENTIAL OUTPUT ENV(F(128),BUFF(1024))
	TITLE('YACHTS.INFO');
   CODE = 'ZZ';
   SAIL = '99999';
   DO I = 1 TO MAXREC;
     RECNO = KEYFLD;
     WRITE FILE(YACHTS) FROM(BOAT_INFO) ;
     KEYFLD = KEYFLD + 1;
   END;
   CLOSE FILE(YACHTS);
   PUT SKIP LIST('YACHT INFO. FILE INITIALISED');
   RETURN;
END;  /* END PROC YACHTP */

 /* BUILD RESULTS FILE */
 /* THIS BUILDS DUMMY RECORDS ON O/P FILE IF VALID RECORD FOUND ON INFO. FILE  */
RESP:	PROC;
   ON ENDFILE(YACHTS) GO TO RESP2;     /* END OF PROCEDURE     */
   RECCNT = 0;	KEYFLD = 0;
   OPEN FILE(RESULT) SEQUENTIAL RECORD KEYED OUTPUT ENV(F(128),BUFF(4096))
	TITLE('OVERALL.DATA');
   OPEN FILE(YACHTS) SEQUENTIAL RECORD KEYED INPUT ENV(F(128),BUFF(4096))
	TITLE('YACHTS.INFO');
   R_OVERALL = '000';  /* FIELDS TO BE FILLED IN LATER */
   DO J = 1 TO 6;
      R_FINTYPE(J) = '***';
      R_POSN(J) = 0;
      R_POINTS(J) = 0;
   END;
   R_TOTAL = 0;
   R_OVERALL = 0;
   R_TOTDIS  = 0;
   R_DISCARD = 0;
   DO I = 1 TO MAXREC;
     READ FILE(YACHTS) INTO(BOAT_INFO);
     IF CODE = 'ZZ'      /* DUMMY RECORD */
       THEN GO TO RESP1; /* FILE BUILD COMPLETE */
     R_CTRY   = CODE;	 /* FIELDS FROM YACHT_INFO */
     R_SAIL   = SAIL;
     R_NAME   = NAME;
     R_FLAG1  = FLAG1;
     R_FLAG2  = FLAG2;
     R_RECNO  = KEYFLD;
     WRITE FILE(RESULT) FROM (OVERALL_RESULTS);
     RECCNT = RECCNT + 1;  KEYFLD = KEYFLD + 1;
   END;
RESP1:
   PUT SKIP LIST('RESULTS FILE BUILT');
   PUT SKIP LIST('NUMBER OF RECORDS = ',RECCNT);
RESP2:
   CLOSE FILE(YACHTS);
   CLOSE FILE(RESULT);
   RETURN;
   END;   /* END PROC RESP */

 /* BUILD RACE FILE OR FILES */
 /* THIS BUILDS DUMMY RECORDS ON O/P FILES IF VALID RECORD FOUND ON YACHT INFO FILE */
RACEP:	PROC;
   RECCNT = 0;
   ON ENDFILE(YACHTS) GO TO RACEP6;
RACEP1:
   PUT SKIP LIST('BUILD ALL RACE FILES OR SELECTED - ENTER ALL/SEL/END - ');
   GET LIST(INFLD);
   IF INFLD = 'END'  THEN GO TO RACEP6;  /* END RACE FILE BUILD */
   IF INFLD = 'ALL'  THEN INDEC = 9;    /* ALL 6 TO BE INITIALISED */
   ELSE DO;
      PUT SKIP LIST('ENTER RACE NO. TO BE BUILT - ');
      GET LIST(INDEC);
      IF INDEC < 1 ! INDEC > 6	THEN DO;
	  PUT SKIP LIST('INVALID');
	  GO TO RACEP1;
      END;
   END;
   IF INDEC = 9 THEN DO;
      I = 1;	  J = 6;
   END;
   ELSE DO;
      I = INDEC;  J = INDEC;
   END;

   DO FIL = I TO J;
     OPEN FILE(YACHTS) SEQUENTIAL RECORD KEYED INPUT ENV(F(128),BUFF(1024))
	  TITLE('YACHTS.INFO');
     TITLVAR = TITLES(FIL);
     OPEN FILE(RACE) SEQUENTIAL RECORD KEYED OUTPUT ENV(F(128),BUFF(1024))
	  TITLE(TITLVAR);
     HHMMSS = '000000';
     ELAPSED = '999999';
     FINISH_TYPE = '***';
     PRE_POSN = 0;
     PR = ' ';
     PENALTY = 0;
     FIN_POSN = 999;
     POINTS    = 0;
     RECCNT = 0;     KEYFLD = 0;
     DO I = 1 TO MAXREC;
       READ FILE(YACHTS) INTO(BOAT_INFO);
       IF CODE = 'ZZ'      /* DUMMY RECORD */
	 THEN GO TO RACEP6;/* FILE BUILD COMPLETE */
       CTRY_CODE = CODE;   /* FIELDS FROM YACHT_INFO */
       SAIL_NO	 = SAIL;
       BOAT_NAME = NAME;
       RACE_FLAG1 = FLAG1;
       RACE_FLAG2 = FLAG2;
       RACE_RECNO = KEYFLD;
       WRITE FILE(RACE) FROM(RACE_INFO);
RACEP5:
       RECCNT = RECCNT + 1;    KEYFLD = KEYFLD + 1;
     END;
RACEP6:
     CLOSE FILE(YACHTS);
     CLOSE FILE(RACE);
     PUT SKIP LIST('RACE FILE ',FIL,' BUILT');
     PUT SKIP LIST('NUMBER OF RECORDS = ',RECCNT);
   END;
   RETURN;
END;  /* END PROC RACEP */

EOJ:

END;  /* END PROGRAM */


