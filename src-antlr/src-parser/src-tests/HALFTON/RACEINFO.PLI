 /**  HALF TON CUP  **/
 /*  PRINT OR LIST TO SCREEN INFORMATION FOR A YACHT ON A RACE OR    */
 /*  OVERALL RESULTS FILE					     */
RACEINFO:  PROC OPTIONS(MAIN);

 DCL COPY_RIGHT  CHAR(20) STATIC INIT('(C) 1984 - P.NORRIE');
 %INCLUDE 'DCLRACE.PLI';
 %INCLUDE 'DCLRESLT.PLI';

 DCL  RESULT  FILE;
 DCL  RACE  FILE;
 DCL  OUT   FILE;
 DCL  TITLES (6) CHAR(9) STATIC INIT('RACE1.DAT','RACE2.DAT','RACE3.DAT',
	     'RACE4.DAT','RACE5.DAT','RACE6.DAT');
 DCL  TITLES2 (6) CHAR(9) STATIC INIT('RACE1.SRT','RACE2.SRT','RACE3.SRT',
	     'RACE4.SRT','RACE5.SRT','RACE6.SRT');
 DCL  TITLVAR  CHAR(9) STATIC;

 DCL  IN3   CHAR(3) STATIC;
 DCL  IN4   CHAR(4) STATIC;
 DCL  IN6   CHAR(6) STATIC;
 DCL  INDEC DEC FIXED(3) STATIC;
 DCL  (I,J) BIN FIXED(15) STATIC;
 DCL  (HH,MM,SS)  CHAR(2) STATIC;
 DCL  RACENO  DEC FIXED(1) STATIC;
 DCL  CTRY  CHAR(4) STATIC;
 DCL  SAIL  CHAR(5) STATIC;
 DCL  LST   CHAR(3) STATIC;
 DCL  FOUND BIT(1) STATIC INIT('0'B);
 DCL  NOS (6) CHAR(1) STATIC INIT('1','2','3','4','5','6');

 DCL  A  CHAR(17) STATIC INIT('FINISH TYPE - ');
 DCL  B  CHAR(17) STATIC INIT('  PRELIM. POSN.- ');
 DCL  C  CHAR(17) STATIC INIT('  PROTEST FLAG - ');
 DCL  D  CHAR(17) STATIC INIT('PENALTY % - ');
 DCL  E  CHAR(17) STATIC INIT('  FINAL POSN. - ');
 DCL  F  CHAR(17) STATIC INIT('  POINTS - ');

 DCL 1 STRUCT STATIC,
       2 S_SAIL   CHAR(5),
       2 F0	  CHAR(3) INIT(' '),
       2 S_NAME   CHAR(12),
       2 F1	  CHAR(5) INIT(' '),
       2 S_FLAG1  CHAR(1),
       2 F2	  CHAR(5) INIT(' '),
       2 S_FLAG2  CHAR(1),
       2 F3	  CHAR(5) INIT(' '),
       2 S_RACE   CHAR(1);
 DCL   AREA  CHAR(38) BASED(P);
 DCL   P POINTER;
 P = ADDR(STRUCT);
 DCL   HEAD  CHAR(50) STATIC
	     INIT('SAIL NO.  NAME          SP.CAT LDS   RACE');
 DCL   HEAD2 CHAR(40) STATIC INIT
	     ('RACE   FINISH   POSITION   POINTS');

INIT:
 ON ERROR PUT SKIP LIST('ONCODE= ',ONCODE());
 ON ENDFILE(RACE) BEGIN;
   FOUND = '0'B;
   CLOSE FILE(RACE);
   OPEN FILE(RACE) RECORD KEYED SEQUENTIAL INPUT ENV(F(128),BUFF(1024))
	TITLE(TITLVAR);
   GO TO MAIN3;
 END;
 ON ENDFILE(RESULT) BEGIN;
   FOUND = '0'B;
   CLOSE FILE(RESULT);
   OPEN FILE(RESULT) RECORD KEYED SEQUENTIAL INPUT ENV(F(128),BUFF(1024))
	TITLE('OVERALL.SRT');
   GO TO MAIN3;
 END;
 PUT SKIP LIST('RACE INFO. QUERY PROGRAM');
 PUT SKIP LIST('PRINT OR LIST TO SCREEN ?  ENTER PRT/LST - ');
 GET LIST(LST);
 IF LST = 'PRT'
   THEN OPEN FILE(OUT) PRINT TITLE('$LST') LINESIZE(132) PAGESIZE(0);
INIT2:
 PUT SKIP LIST('RACE FILE OR OVERALL RESULTS FILE ?');
 PUT SKIP LIST('ENTER RACE/OVER - ');
 GET LIST(IN4);
 IF IN4 ~= 'RACE'  THEN DO;
   OPEN FILE(RESULT) RECORD KEYED SEQUENTIAL INPUT ENV(F(128),BUFF(1024))
	TITLE('OVERALL.SRT');
   GO TO MAIN2; 	/* BYPASS RACE NO. CHECK */
 END;
 PUT SKIP LIST('QUERY UNSORTED OR SORTED FILE? - ENTER  UNS/SOR - ');
 GET LIST(IN3);
 IF IN3 ~= 'UNS'
    THEN IF IN3 ~= 'SOR'
	   THEN GO TO INIT2;
MAIN:
 PUT SKIP LIST('ENTER RACE NO. - ');
 GET LIST(RACENO);
 IF IN3 = 'UNS'
     THEN TITLVAR = TITLES(RACENO);
 ELSE TITLVAR = TITLES2(RACENO);
 OPEN FILE(RACE) RECORD KEYED SEQUENTIAL INPUT ENV(F(128),BUFF(1024))
      TITLE(TITLVAR);
MAIN2:
 PUT SKIP LIST('ENTER SAIL NO. - ');
 GET LIST(SAIL);
 DO I = 1 TO 4;
   IF SUBSTR(SAIL,5,1) = ' '
     THEN SAIL = ' '!!SAIL;
 END;
 CALL FIND;   /* FIND MATCHING RECORD */
MAIN3:
 IF FOUND THEN DO;
    IF IN4 = 'RACE'
       THEN CALL PRT;	 /* PRINT RACE RECORD INFO. */
    ELSE CALL PRT2;	 /* PRINT OVERALL RESULTS INFO. */
 END;
 ELSE DO;
   PUT SKIP LIST('YACHT NOT FOUND');
   GO TO MAIN2;  /* TRY AGAIN */
 END;
 CLOSE FILE(RACE);
 CLOSE FILE(RESULT);
 IF IN4 = 'RACE'  THEN GO TO MAIN;   /* NEXT YACHT */
 OPEN FILE(RESULT) RECORD KEYED SEQUENTIAL INPUT ENV(F(128),BUFF(1024))
      TITLE('OVERALL.SRT');
 GO TO MAIN2;	/* NEXT YACHT */

FIND:	PROC;	/* LOOK FOR MATCH ON RACE FILE */
  IF IN4 ~= 'RACE'  THEN GO TO FIND2;  /* PROCESS RESULT FILE */
FIND1:
  READ FILE(RACE) INTO(RACE_INFO);
  IF SAIL = SAIL_NO  THEN DO;
	FOUND = '1'B;
	GO TO FINDEND;
  END;
  GO TO FIND1;
FIND2:
  READ FILE(RESULT) INTO(OVERALL_RESULTS);
  IF SAIL = R_SAIL  THEN DO;
      FOUND = '1'B;
      GO TO FINDEND;
  END;
  GO TO FIND2;
FINDEND:
  RETURN;
  END;	/* END PROC FIND */

PRT:	PROC;
  S_SAIL = SAIL_NO;
  S_NAME = BOAT_NAME;
  S_FLAG1 = RACE_FLAG1;
  S_FLAG2 = RACE_FLAG2;
  S_RACE  = NOS(RACENO);
  IF LST = 'PRT'
    THEN DO;
      PUT FILE(OUT) EDIT(HEAD) (PAGE,SKIP,A);
      PUT FILE(OUT) EDIT(AREA) (SKIP,A);
      PUT FILE(OUT) EDIT(A,FINISH_TYPE,B,PRE_POSN,C,PR)
	  (SKIP,A,A,A,F(3),A,A);
      PUT FILE(OUT) EDIT(D,PENALTY,E,FIN_POSN,F,POINTS)
	  (A,F(2),A,F(3),A,F(6,3));
  END;

  ELSE DO;
      PUT EDIT(HEAD) (PAGE,SKIP,A);
      PUT EDIT(AREA) (SKIP,A);
      PUT EDIT(A,FINISH_TYPE,B,PRE_POSN,C,PR)
	  (SKIP,A,A,A,F(3),A,A);
      PUT EDIT(D,PENALTY,E,FIN_POSN,F,POINTS)
	  (A,F(2),A,F(3),A,F(6,3));
  END;
END;   /* END PROC PRT */

 /***  PROC TO PRINT OVERALL RESULTS FILE RECORD */
PRT2:	PROC;
  S_SAIL = R_SAIL;
  S_NAME = R_NAME;
  S_FLAG1 = R_FLAG1;
  S_FLAG2 = R_FLAG2;
  S_RACE  = ' ';
  IF LST = 'PRT'
    THEN DO;
      PUT FILE(OUT) EDIT(HEAD) (PAGE,SKIP(2),A);
      PUT FILE(OUT) EDIT(AREA) (SKIP,A);
      PUT FILE(OUT) EDIT(HEAD2) (SKIP(2),A);
      DO I = 1 TO 6;
	 PUT FILE(OUT) EDIT(I,R_FINTYPE(I),R_POSN(I),R_POINTS(I))
	 (SKIP,X(2),F(1),X(6),A,X(6),F(3),X(6),F(6,3));
      END;
      PUT FILE(OUT) EDIT('POINTS TO DATE = ',R_TOTAL) (SKIP(2),A,F(7,3));
      PUT FILE(OUT) EDIT('OV.POSN.TO DATE = ',R_OVERALL) (X(2),A,F(3));
  END;

  ELSE DO;
      PUT EDIT(HEAD) (PAGE,SKIP(2),A);
      PUT EDIT(AREA) (SKIP,A);
      PUT EDIT(HEAD2) (SKIP(2),A);
      DO I = 1 TO 6;
	 PUT EDIT(I,R_FINTYPE(I),R_POSN(I),R_POINTS(I))
	 (SKIP,X(2),F(1),X(6),A,X(6),F(3),X(6),F(6,3));
      END;
      PUT EDIT('POINTS TO DATE = ',R_TOTAL) (SKIP(2),A,F(7,3));
      PUT EDIT('OV.POSN.TO DATE = ',R_OVERALL) (X(2),A,F(3));
   END;
END;   /* END PROC PRT2 */

EOJ:
  PUT SKIP(3) LIST('END OF RACE INFO. QUERY PROGRAM');
  IF LST = 'PRT'
    THEN PUT FILE(OUT) SKIP;

  END;

