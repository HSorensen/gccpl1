 /***  ENTERPRISE NATIONAL CHAMPIONSHIPS  ***/
 /*  PROGRAM TO UPDATE RACE DATA FILES - UNLIKE HALF TON CODE, THIS VERSION  */
 /*  ONLY UPDATES PENALTIES AND PROTEST FLAGS				     */

RACEUPD:  PROC OPTIONS(MAIN);

 DCL COPY_RIGHT CHAR(20) STATIC INIT('(C) P.NORRIE 1985');
 %INCLUDE 'DCLRACE.PLI';    /* RACE FILE STRUCTURE */
 DCL  RACE  FILE;
 DCL  IN1  CHAR(1) STATIC;
 DCL  IN2  CHAR(2) STATIC;
 DCL  IN3  CHAR(3) STATIC;
 DCL  IN5  CHAR(5) STATIC;
 DCL  IN6  CHAR(6) STATIC;
 DCL  IN8  CHAR(8) STATIC;
 DCL  WORK CHAR(10) STATIC;
 DCL  NUM  CHAR(10) STATIC INIT('0123456789');

 DCL  INDEC DEC FIXED(3) STATIC;
 DCL  MAXREC	   DEC FIXED(3) STATIC INIT(150);

 DCL  (I,J)  BIN FIXED(15) STATIC;
 DCL  KEYFLD BIN FIXED(15) STATIC;
 DCL  RACENO BIN FIXED(15) STATIC;
 DCL  FOUND  BIT(1) STATIC INIT('0'B);

 DCL  TITLES (6) CHAR(10) STATIC INIT('RACE1.DATA','RACE2.DATA','RACE3.DATA','RACE4.DATA',
	 'RACE5.DATA','RACE6.DATA');
 DCL  TITLVAR  CHAR(10) STATIC;

INIT:
  ON ERROR PUT SKIP LIST('ONCODE=',ONCODE());
  ON ENDFILE(RACE) BEGIN;
    FOUND = '0'B;
    GO TO MAIN2;   /* CONTINUE WITH NOT FOUND MSG */
  END;
  CALL RACEP;	 /* PICK UP RACE NUMBER AND VET IT */
INIT1:
  PUT SKIP LIST('UPDATE RACE PENALTIES AND/OR PROTEST FLAGS');

MAIN:
  PUT SKIP LIST('ENTER SAIL NO. OR END - ');
  GET LIST(IN5);
  IF IN5 = 'END'  THEN GO TO EOJ;  /* END PROGRAM */
  CALL FIND;	/* LOOK FOR MATCHING RECORD ON RACE FILE */
MAIN2:
  IF ~ FOUND  THEN DO;
    PUT SKIP LIST('^GNO RECORD FOR THIS BOAT');
    GO TO MAIN;  /* TRY AGAIN */
  END;
  CALL PENUPD;	     /* UPDATE PENALTIES */
  GO TO MAIN;	     /* NEXT YACHT  */

/** PICK UP RACE NUMBER & CHECK IT.  OPEN REQD. RACE FILE - 1 TO 6 */
RACEP:	PROC;
RP1:
  PUT SKIP LIST('ENTER RACE NUMBER - 1 TO 6 - ');
  GET LIST(RACENO);
  IF RACENO < 1 ! RACENO > 6  THEN DO;
    PUT SKIP LIST('^GRACE NO. INVALID');
    GO TO RP1;
  END;
  TITLVAR = TITLES(RACENO);
  OPEN FILE(RACE) RECORD KEYED DIRECT UPDATE ENV(F(128),BUFF(1024))
       TITLE(TITLVAR);
  RETURN;
  END;	/* END PROC RACEP */

/** PROCEDURE FIND - READ RACE FILE TO FIND REQD. YACHT **/
FIND:  PROC;
  KEYFLD = 0;	   /* START AT TOP OF FILE */
  /* RIGHT-JUSTIFY SAIL NO. - 5 CHARS - IN FIELD IN5 */
  DO I = 1 TO 4;
    IF SUBSTR(IN5,5,1) = ' '
      THEN IN5 = ' '!!IN5;
  END;
FIND1:
  READ FILE(RACE) INTO(RACE_INFO) KEY(KEYFLD);
  IF SAIL_NO = IN5
    THEN DO;
       FOUND = '1'B;
       GO TO FINDEND;
  END;
  KEYFLD = KEYFLD + 1;
  IF KEYFLD = MAXREC  THEN DO;
    FOUND = '0'B;
    GO TO FINDEND;
  END;
  GO TO FIND1;	 /* READ NEXT RECORD */
FINDEND:
  RETURN;
  END;	/* END PROC FIND */

/** PROCEDURE PENUPD - UPDATE PENALTIES **/
PENUPD:  PROC;
  PUT SKIP LIST('CURRENT STATUS IS - PROTEST = ',PR,'PENALTY % = ',PENALTY);
PEN1:
  PUT SKIP LIST('PROTEST FLAG REQUIRED? - Y/N ');
  GET LIST(IN1);
  PR = IN1;
  PUT SKIP LIST('ENTER % PENALTY - NN OR 0 - ');
  GET LIST(INDEC);
  PENALTY = INDEC;
  PUT SKIP LIST('PROTEST FLAG = ',PR,'PENALTY % = ',PENALTY);
  PUT SKIP LIST('CONFIRM OK - Y/N ');
  GET LIST(IN1);
  IF IN1 ~= 'Y'  THEN GO TO PEN1;
  WRITE FILE(RACE) FROM(RACE_INFO) KEYFROM(KEYFLD);
  PUT SKIP LIST('RECORD UPDATED');
  RETURN;
END;  /* END PROC PENUPD */


EOJ:
  CLOSE FILE(RACE);
  PUT SKIP LIST('RACE UPDATE PROGRAM ENDED');
  END;

