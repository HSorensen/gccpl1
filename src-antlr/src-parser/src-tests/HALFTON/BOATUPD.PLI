      /*  ENTERPRISE NATIONALS	1985 */
      /*  UPDATE PROGRAM FOR YACHT INFORMATION FILE  */
BOATUPD:  PROC OPTIONS(MAIN);

  DCL  COPY_RIGHT CHAR(20) STATIC INIT('(C) P.NORRIE 1985');
  DCL  MAXREC DEC FIXED(5) STATIC INIT(200);
  %INCLUDE 'DCLINFO.PLI';   /* STRUCTURE FOR YACHT INFO. FILE */
  DCL  YACHTS  FILE;
  DCL  CMD  CHAR(3) STATIC;
  DCL  VALID_CMDS (4) CHAR(3) STATIC INIT('ADD','DEL','UPD','LST');
  DCL  BLDIN CHAR(20) STATIC;
  DCL  BLDIN1 CHAR(1)  STATIC;
  DCL  BLDIN3 CHAR(3)  STATIC;
  DCL  CTRY_CODE  CHAR(2) STATIC;
  DCL  OK   CHAR(1) STATIC;
  DCL  FOUND BIT(1) STATIC INIT('0'B);
  DCL  FIRST BIT(1) STATIC INIT('1'B);
  DCL  I  BIN FIXED(15) STATIC;
  DCL  KEYFLD BIN FIXED(15) STATIC INIT(0);
  DCL  SLOTFLD BIN FIXED(15) STATIC INIT(0);

INIT:
  ON ERROR PUT SKIP LIST('ONCODE =',ONCODE());
  ON KEY(YACHTS) BEGIN;
    PUT SKIP LIST('^GOUTWITH FILE',ONKEY());
    GO TO EOJ;
  END;
  ON ENDFILE(YACHTS) BEGIN;
     PUT SKIP LIST('RECORD FOR THIS BOAT NOT FOUND');
     FOUND = '0'B;
     GO TO MAIN;
  END;
  PUT SKIP LIST('YACHT INFO. UPDATE');

MAIN:
  IF FIRST THEN FIRST = '0';
  ELSE CLOSE FILE(YACHTS);    /* CLOSE IF ALREADY OPEN */
  OPEN FILE(YACHTS) UPDATE KEYED DIRECT ENV(F(128)) TITLE('YACHTS.INFO');
  KEYFLD = 0;		      /* FIRST RECORD */
MAIN0:
  PUT SKIP LIST('ENTER ADD/DEL/UPD/LST/END - ');
  GET LIST(CMD);
  IF CMD = 'END'  THEN GO TO EOJ;
  DO I = 1 TO 4;
    IF CMD = VALID_CMDS(I)
      THEN GO TO MAIN1;     /* VALID COMMAND - CONTINUE */
  END;
  PUT SKIP LIST('^GCOMMAND INVALID');
  GO TO MAIN0;

MAIN1:
  IF CMD = 'ADD'  THEN DO;
    CALL SLOT;	/* FIND EMPTY RECORD */
    IF KEYFLD > MAXREC-1  THEN GO TO EOJ;
MAIN2:
    CALL BLD;	/* BUILD NEW RECORD */
    CALL LST;	/* LIST IT */
    PUT SKIP LIST('CONFIRM OK TO ADD - Y/N ');
    GET LIST(OK);
    IF OK = 'Y'  THEN DO;
      CALL OUT; 	 /* OUTPUT NEW RECORD */
      GO TO MAIN;	 /* NEXT RECORD */
    END;
    PUT SKIP LIST('INPUT ALTERATIONS');
    GO TO MAIN2;	       /* CORRECT ERRORS   */
  END;
  CALL FIND;	/* READ TO FIND REQD. YACHT */
  IF ~FOUND THEN GO TO MAIN;  /* START AGAIN */

  IF CMD = 'LST'  THEN DO;
    CALL LST;
    GO TO MAIN;  /* NEXT RECORD */
  END;

  IF CMD = 'DEL'  THEN DO;
    CALL LST;	 /* LIST IT */
    CODE = 'ZZ';
    SAIL = '99999';
    PUT SKIP LIST('RECORD TO BE DELETED - CONFIRM Y/N ');
    GET LIST(OK);
    IF OK = 'Y'  THEN DO;
      CALL OUT; 	 /* OUTPUT DELETED RECORD */
      PUT SKIP LIST('RECORD DELETED');
    END;
    ELSE PUT SKIP LIST('RECORD NOT DELETED');
    GO TO MAIN;
  END;

 /* PROCESS UPD */
  CALL LST;   /* LIST CURRENT RECORD  */
MAIN4:
  CALL BLD;   /* ALTER RECORD AS REQD. */
  CALL LST;   /* LIST IT */
  PUT SKIP LIST('CONFIRM ALTERATIONS OK - Y/N ');
  GET LIST(OK);
  IF OK = 'Y'  THEN DO;
    CALL OUT;	       /* REWRITE UPDATED RECORD */
    GO TO MAIN;        /* NEXT RECORD */
  END;
  PUT SKIP LIST('INPUT CORRECTIONS');
  GO TO MAIN4;	       /* TRY AGAIN */

/**  SLOT - CODE TO FIND NEXT EMPTY RECORD  */
SLOT:  PROC;
  KEYFLD = SLOTFLD;   /* START KEY FOR SEARCH FOR EMPTY RECORD */
SLOT1:
  READ FILE(YACHTS) INTO(BOAT_INFO) KEY(KEYFLD);
  IF CODE = 'ZZ'  THEN GO TO SLOTEND;  /* EMPTY RECORD FOUND */
  KEYFLD = KEYFLD + 1;
  IF KEYFLD > MAXREC-1	THEN DO;
    PUT SKIP LIST('OUT OF RANGE');
    GO TO SLOTEND;
  END;
  GO TO SLOT1;	/* READ NEXT RECORD */
SLOTEND:
  SLOTFLD = KEYFLD + 1;   /* KEY VALUE FOR NEXT SEARCH */
  RETURN;
END SLOT;  /* END OF PROC SLOT */

/**  FIND - CODE TO FIND RECORD FOR THIS YACHT */
FIND:  PROC;
FIND1:
  PUT SKIP LIST('ENTER REQD.SAIL NO.- ');
  GET LIST(BLDIN);
  DO I = 1 TO 4;
     IF SUBSTR(BLDIN,5,1) = ' '
       THEN BLDIN = ' '!!SUBSTR(BLDIN,1,4);
  END;
FIND2:
  READ FILE(YACHTS) INTO(BOAT_INFO) KEY(KEYFLD);
  IF SAIL = BLDIN
    THEN DO;
       FOUND = '1'B;
       GO TO FINDEND;  /* MATCH FOUND - EXIT */
    END;
  KEYFLD = KEYFLD + 1;
  IF KEYFLD < MAXREC  THEN GO TO FIND2;  /* READ NEXT RECORD */
  PUT SKIP LIST('RECORD NOT FOUND ');
  FOUND = '0'B;
FINDEND:
  RETURN;
END FIND;   /* END OF PROC FIND */

/**  CODE FOR BUILDING/ALTERING A RECORD */
BLD:  PROC;
BLD1:
  CODE = 'K';    /* I.E. NO LONGER DUMMY RECORD - NOT ACTUALLY USED OTHERWISE */
  PUT SKIP LIST('ENTER DATA AS REQESTED OR "." FOR DEFAULT');
  PUT SKIP LIST('SAIL NO.- ');
  GET LIST(BLDIN);
  IF BLDIN ~= '.' THEN SAIL = BLDIN;
  DO I = 1 TO 4;		     /* RIGHT JUSTIFY SAIL NUMBER */
    IF SUBSTR(SAIL,5,1) = ' '
      THEN SAIL = ' '!!SUBSTR(SAIL,1,4);
  END;
  PUT SKIP LIST('BOAT NAME - ');
  GET EDIT(BLDIN)(A);
  IF BLDIN ~= '.'  THEN NAME = BLDIN;
  PUT SKIP LIST('TALLY NO. - ');
  GET EDIT (BLDIN3) (A);
  IF BLDIN3 ~= '.'  THEN TALLY = BLDIN3;
  DO I = 1 TO 2;
     IF SUBSTR(TALLY,3,1) = ' '
       THEN TALLY = ' '!!TALLY;
  END;
  PUT SKIP LIST('SKIPPER - ');
  GET EDIT (BLDIN) (A);
  IF BLDIN ~= '.'  THEN SKIPPER = BLDIN;
  PUT SKIP LIST('CREW - ');
  GET EDIT(BLDIN) (A);
  IF BLDIN ~= '.' THEN CREW = BLDIN;
  PUT SKIP LIST('CLUB - ');
  GET EDIT(BLDIN) (A);
  IF BLDIN ~= '.' THEN CLUB = BLDIN;
  PUT SKIP LIST('COLOUR - ');
  GET EDIT(BLDIN) (A);
  IF BLDIN ~= '.' THEN COLOUR = BLDIN;
BLD4:
  PUT SKIP LIST('FLAG FIELD - ENTER AS BELOW OR BLANK');
  PUT SKIP LIST('A = UNDER 18, B = UNDER 21, C = OVER 40 - ');
  GET EDIT(BLDIN1) (A);
  IF BLDIN1 ~= ' '
    THEN IF BLDIN1 ~= 'A'
	   THEN IF BLDIN1 ~= 'B'
		  THEN IF BLDIN1 ~= 'C'  THEN DO;
			 PUT SKIP LIST('^G INVALID');
			 GO TO BLD4;
		       END;
  IF BLDIN1 ~= '.' THEN FLAG1 = BLDIN1;
  PUT SKIP LIST('IS EITHER MEMBER OF CREW A LADY ? - Y/N - ');
  GET LIST(BLDIN1);
  IF BLDIN1 ~= 'Y'  THEN FLAG2 = 'L';
  ELSE IF BLDIN1 ~= '.' THEN FLAG2 = ' ';
  RETURN;
END BLD;   /* END PROC BLD */

/**  CODE TO LIST CONTENTS OF RECORD  **/
LST:  PROC;
  IF CODE = 'ZZ'  THEN DO;
    PUT SKIP LIST('THIS IS A DUMMY RECORD');
    GO TO LSTEND;
  END;
  PUT SKIP LIST ('KEY',KEYFLD);
  PUT SKIP LIST ('SAIL NO.',SAIL);
  PUT SKIP LIST ('NAME',NAME);
  PUT SKIP LIST ('TALLY',TALLY);
  PUT SKIP LIST ('SKIPPER',SKIPPER);
  PUT SKIP LIST ('CREW',CREW);
  PUT SKIP LIST ('CLUB',CLUB);
  PUT SKIP LIST ('COLOUR',COLOUR);
  PUT SKIP LIST ('FLAG',FLAG1);
  PUT SKIP LIST ('LADY FLAG',FLAG2);
LSTEND:
  RETURN;
END LST;   /* END PROC LST  */

/**  CODE TO OUTPUT NEW/ALTERED/DELETED RECORD	**/
OUT:  PROC;
  PUT SKIP LIST('CONFIRM OK TO WRITE RECORD - Y/N ');
  GET LIST (OK);
  IF OK = 'Y'  THEN DO;
    WRITE FILE(YACHTS) FROM(BOAT_INFO) KEYFROM(KEYFLD);
    PUT SKIP LIST('RECORD ALTERED - KEY - ',KEYFLD);
  END;
  ELSE PUT SKIP LIST('RECORD NOT ALTERED');
  RETURN;
END OUT;   /*  END PROC OUT  */

/**   END OF PROGRAM   **/
EOJ:
  CLOSE FILE(YACHTS);
  PUT SKIP LIST('YACHT INFO. UPDATE COMPLETE');
  END;

